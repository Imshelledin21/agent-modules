/*
Module: log-all
Description: Wrapper module to include all kubernetes logging modules and use cri parsing
Arguments:
  targets: Discovered targets to apply relabelings to
*/

argument "loki_url" {
  optional = false
  comment = "The full URL address of Loki including the protocol, host and path i.e. https://example.com/loki/api/v1/push"
}
argument "loki_username" {
  comment = "The Loki Username / Tenant ID"
  optional = false
}
argument "loki_password" {
  comment = "The Loki Password / Token for the Tenant"
  optional = true
  default = ""
}
argument "tenant" {
  comment = "The tenant to filter logs to.  This does not have to be the tenantId, this is the value to look for in the logs.agent.grafana.com/tenant annotation, and this can be a regex."
  optional = true
  default = "primary|"
}
argument "keep_labels" {
  optional = true
  comment = "List of labels to keep before the log message is written to Loki"
  default = [
    "app",
    "cluster",
    "component",
    "deployment",
    "env",
    "filename",
    "instance",
    "job",
    "level",
    "namespace",
    "region",
    "service",
    "squad",
    "team",
  ]
}

module.git "log_targets" {
  repository = "https://github.com/bentonam/agent-modules.git"
  revision   = "main"
  path       = "modules/kubernetes/logs/targets/logs-from-worker-cri.river"

  arguments {
    forward_to = module.git.log_formats_all.exports.process.receiver
    tenant = argument.tenant.value
  }
}

module.git "log_formats_all" {
  repository = "https://github.com/bentonam/agent-modules.git"
  revision   = "main"
  path       = "modules/kubernetes/logs/log-formats/all.river"

  arguments {
    forward_to = module.git.log_level_default.exports.process.receiver
  }
}

module.git "log_level_default" {
  repository = "https://github.com/bentonam/agent-modules.git"
  revision   = "main"
  path       = "modules/kubernetes/logs/labels/log-level.river"

  arguments {
    forward_to = module.git.scrub_all.exports.process.receiver
  }
}

module.git "drop_levels" {
  repository = "https://github.com/bentonam/agent-modules.git"
  revision   = "main"
  path       = "modules/kubernetes/logs/drops/levels.river"

  arguments {
    forward_to = module.git.scrub_all.exports.process.receiver
  }
}

module.git "scrub_all" {
  repository = "https://github.com/bentonam/agent-modules.git"
  revision   = "main"
  path       = "modules/kubernetes/logs/scrubs/all.river"

  arguments {
    forward_to = module.git.embed_pod.exports.process.receiver
  }
}

module.git "embed_pod" {
  repository = "https://github.com/bentonam/agent-modules.git"
  revision   = "main"
  path       = "modules/kubernetes/logs/embed/pod.river"

  arguments {
    forward_to = module.git.mask_all.exports.process.receiver
  }
}

module.git "mask_all" {
  repository = "https://github.com/bentonam/agent-modules.git"
  revision   = "main"
  path       = "modules/kubernetes/logs/masks/all.river"

  arguments {
    forward_to = module.git.label_normalize_filename.exports.process.receiver
  }
}

module.git "label_normalize_filename" {
  repository = "https://github.com/bentonam/agent-modules.git"
  revision   = "main"
  path       = "modules/kubernetes/logs/labels/normalize-filename.river"

  arguments {
    forward_to = module.git.label_keep.exports.process.receiver
  }
}

module.git "label_keep" {
  repository = "https://github.com/bentonam/agent-modules.git"
  revision   = "main"
  path       = "modules/kubernetes/logs/labels/keep-labels.river"

  arguments {
    forward_to = loki.write.destination.receiver
    keep_labels = argument.keep_labels.value
  }
}

loki.write "destination" {
    endpoint {
        url = env("LOGS_PUBLISHER_URL")
        basic_auth {
            username = env("LOGS_PUBLISHER_TENANT_OPS")
            password = env("LOGS_PUBLISHER_TOKEN")
        }
    }
}
