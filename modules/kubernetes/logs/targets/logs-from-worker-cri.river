/*
Module: logs-from-worker-cri
Description: Performs Kubernetes service discovery for pods, applies relabelings, discovers available files on the
             worker node, and uses these are source files for loki and parses the files using the cri stage.

             This requires the agent to deployed as a DaemonSet, as each pod will mount a volume to the worker
             node to retrieve the pod logs.
Arguments:
  forward_to: Module to forward the output to
*/
argument "forward_to" {
  optional = false
}

argument "tenant" {
  // comment = "The tenant to filter logs to.  This does not have to be the tenantId, this is the value to look for in the logs.agent.grafana.com/tenant annotation, and this can be a regex."
  optional = true
  default = "primary|"
}

discovery.kubernetes "pods" {
  role = "pod"
}

module.git "relabelings_log" {
  repository = "https://github.com/bentonam/agent-modules.git"
  revision   = "main"
  path       = "modules/kubernetes/logs/relabelings.river"

  arguments {
    targets = discovery.kubernetes.pods.targets
    tenant = argument.tenant.value
  }
}

discovery.file "pods" {
  path_targets = module.git.relabelings_log.exports.relabelings.output
}

loki.source.file "pods" {
  targets = discovery.file.pods.targets
  forward_to = [loki.process.parse.receiver]
}

loki.process "parse" {
  forward_to  = [argument.forward_to.value]

  stage.cri {}

  stage.labels {
    values = {
      stream  = "",         // Sets up an 'stream' label, based on the 'stream' extracted value.
    }
  }

}
