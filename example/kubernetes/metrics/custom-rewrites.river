/*
The following example shows specific modules, kubernetes scrapes only, for
a single tenant and specifying the destination url/credentials via environment
variables.
*/
logging {
  level  = coalesce(env("AGENT_LOG_LEVEL"), "info")
  format = "logfmt"
}

module.git "scrape_endpoints" {
  repository = argument.git_repo.value
  revision = argument.git_rev.value
  pull_frequency = argument.git_pull_freq.value
  path = "modules/kubernetes/metrics/scrapes/auto-scrape-endpoints.river"

  arguments {
    forward_to = [prometheus.relabel.custom.receiver]
  }
}

prometheus.relabel "custom" {
  forward_to = [prometheus.remote_write.local_primary.receiver]

  // example rule to drop any go_* metrics
  rule {
    action = "drop"
    source_labels = ["__name__"]
    regex = "go_.*"
  }

}

prometheus.remote_write "local_primary" {
  endpoint {
    url = env("METRICS_PRIMARY_URL")

    basic_auth {
      username = env("METRICS_PRIMARY_TENANT")
      password = env("METRICS_PRIMARY_TOKEN")
    }

    write_relabel_config {
			replacement = coalesce(env("CLUSTER_NAME"), env("CLUSTER"), "")
			target_label  = "cluster"
		}

    write_relabel_config {
			replacement = coalesce(env("ENV"), "")
			target_label  = "env"
		}

    write_relabel_config {
			replacement = coalesce(env("REGION"), "")
			target_label  = "region"
		}
  }
}
