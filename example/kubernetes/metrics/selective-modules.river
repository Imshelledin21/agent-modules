/*
The following example shows specific modules, kubernetes scrapes only, for
a single tenant and specifying the destination url/credentials via environment
variables.
*/
logging {
  level  = coalesce(env("AGENT_LOG_LEVEL"), "info")
  format = "logfmt"
}

module.git "scrape_kubelet_cadvisor" {
  repository = "https://github.com/grafana/agent-modules.git"
  revision   = "main"
  path = "modules/kubernetes/metrics/scrapes/kubelet-cadvisor.river"

  arguments {
    forward_to = [prometheus.remote_write.local_primary.receiver]
  }
}

module.git "scrape_kubelet" {
  repository = "https://github.com/grafana/agent-modules.git"
  revision   = "main"
  path = "modules/kubernetes/metrics/scrapes/kubelet.river"

  arguments {
    forward_to = [prometheus.remote_write.local_primary.receiver]
  }
}

module.git "scrape_kubelet_probes" {
  repository = "https://github.com/grafana/agent-modules.git"
  revision   = "main"
  path = "modules/kubernetes/metrics/scrapes/kubelet-probes.river"

  arguments {
    forward_to = [prometheus.remote_write.local_primary.receiver]
  }
}

module.git "scrape_kube_apiserver" {
  repository = "https://github.com/grafana/agent-modules.git"
  revision   = "main"
  path = "modules/kubernetes/metrics/scrapes/kube-apiserver.river"

  arguments {
    forward_to = [prometheus.remote_write.local_primary.receiver]
  }
}

prometheus.remote_write "local_primary" {
  endpoint {
    url = env("METRICS_PRIMARY_URL")

    basic_auth {
      username = env("METRICS_PRIMARY_TENANT")
      password = env("METRICS_PRIMARY_TOKEN")
    }

    write_relabel_config {
			replacement = coalesce(env("CLUSTER_NAME"), env("CLUSTER"), "")
			target_label  = "cluster"
		}

    write_relabel_config {
			replacement = coalesce(env("ENV"), "")
			target_label  = "env"
		}

    write_relabel_config {
			replacement = coalesce(env("REGION"), "")
			target_label  = "region"
		}
  }
}
